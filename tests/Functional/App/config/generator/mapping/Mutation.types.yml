# Todo: remove this configuration after the generator is finished
Mutation:
    type: object
    config:
        fields:
#            validation:
#                - Callback: [App\Validation\UserValidator, validate]
            createStudent:
                type: String
                resolve: '@=mut("mutation_mock", [args, validator])'
                validation:
                    - Callback: [Overblog\GraphQLBundle\Tests\Functional\Validator\StaticValidator, greaterThan]
                args:
                    username:
                        type: "String"
                        validation:
                            - NotNull: ~
                            - Length:
                                  min: 15
                                  max: 19
                    data:
                        type: PersonInput
                        validation: cascade

PersonInput:
    type: input-object
    config:
        fields:
            firstName:
                type: String!
                validation:
                    - NonNull: ~
                    - Length: { min: 6 }
            lastName:
                type: String!
                validation:
                    link: Overblog\GraphQLBundle\Tests\Functional\Validator\DummyEntity::$string1
            password:
                type: String!
                validation:
                    - IdenticalTo: passwordRepeat
            dateOfBirth:
                type: Date
                validation: cascade

Date:
    type: input-object
    config:
        fields:
            day:
                type: Int!
                validation:
                    - Range: { min: 1, max: 31 }
            month:
                type: Int!
                validation:
                    - Range: { min: 1, max: 12 }
            year:
                type: Int!
                validation:
                    - Range: { min: 1900, max: 2020 }


Person:
    type: interface
    config:
        description: "A person"
        resolveType: "@=res('person_type', [value, typeResolver])"
        fields:
            firstName:
                type: String!
                description: "Person's first name."
                deprecationReason: "This field will be soon removed!"
                access: false
                complexity: 15
                public: true
            lastName:
                type: String!
                description: "Person's last name."
#                defaultValue: "Mark Wahlberg"


Student:
    type: object
    config:
        interfaces: [Person]
        fields:
            faculty: String!


Professor:
    type: object
    config:
        interfaces: [Person]
        fields:
            classes:
                type: "[String!]!"
                access: "@=service('security.authorization_checker').isGranted('ROLE_ADMIN')"
                complexity: '@=15 + childrenComplexity'
#                complexity: '@=call(["Overblog\\GraphQLBundle\\Tests\\Functional\\App\\Mutation", "complexityCallable"], args)'
                public: "@=service('security.authorization_checker').isGranted('ROLE_ADMIN', typeName, fieldName)"
                args:
                    semester:
                        type: Int!
                        defaultValue: 1
                        description: "The semester pf the class"
                    year: Int
