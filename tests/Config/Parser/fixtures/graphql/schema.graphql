"""Root Query"""
type Query {
  hero(
    """Episode list to use to filter"""
    episodes: [Episode!]! = [NEWHOPE, EMPIRE]
  ): Character
  """search for a droid"""
  droid(id: ID!): Droid
}

type Starship {
  id: ID!
  name: String!
  length(unit: LengthUnit = METER): Float
}

enum Episode {
  NEWHOPE
  """Star Wars: Episode V â€“ The Empire Strikes Back"""
  EMPIRE
  JEDI @deprecated
}

interface Character {
  id: ID!
  name: String!
  friends: [Character]
  appearsIn: [Episode]!
  deprecatedField: String! @deprecated(reason: "This field was deprecated!")
}

type Human implements Character {
  id: ID!
  name: String!
  friends: [Character]
  appearsIn: [Episode]!
  starships: [Starship]
  totalCredits: Int
}

type Droid implements Character {
  id: ID!
  name: String!
  friends: [Character]
  appearsIn: [Episode]!
  primaryFunction: String
}

union SearchResult = Human | Droid | Starship

input ReviewInput {
  stars: Int! = 5
  rate: Float! = 1.58
  commentary: String = null
}

scalar Year
