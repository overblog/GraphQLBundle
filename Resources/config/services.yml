parameters:
    overblog_graphql.default_resolver: [Overblog\GraphQLBundle\Resolver\Resolver, defaultResolveFn]

    #todo use tagged services
    overblog_graphql.configs_mapping:
        fields: {id: "overblog_graphql.fields_config_solution", method: "solve"}
        isTypeOf: {id: "overblog_graphql.resolve_callback_config_solution", method: "solve"}
        interfaces: {id: "overblog_graphql.type_config_solution", method: "solveInterfaces"}
        types: {id: "overblog_graphql.type_config_solution", method: "solveTypes"}
        values: {id: "overblog_graphql.values_config_solution", method: "solve"}
        resolveType: {id: "overblog_graphql.resolve_callback_config_solution", method: "solve"}
        resolveCursor: {id: "overblog_graphql.resolve_callback_config_solution", method: "solve"}
        resolveNode: {id: "overblog_graphql.resolve_callback_config_solution", method: "solve"}
        nodeType: {id: "overblog_graphql.type_config_solution", method: "solveTypeCallback"}
        connectionFields: {id: "overblog_graphql.fields_config_solution", method: "solve"}
        edgeFields: {id: "overblog_graphql.fields_config_solution", method: "solve"}
        mutateAndGetPayload: {id: "overblog_graphql.resolve_callback_config_solution", method: "solve"}
        idFetcher: {id: "overblog_graphql.resolve_callback_config_solution", method: "solve"}
        nodeInterfaceType: {id: "overblog_graphql.type_config_solution", method: "solveTypeCallback"}
        inputType: {id: "overblog_graphql.type_config_solution", method: "solveTypeCallback"}
        outputType: {id: "overblog_graphql.type_config_solution", method: "solveTypeCallback"}
        payloadType: {id: "overblog_graphql.type_config_solution", method: "solveTypeCallback"}
        resolveSingleInput: {id: "overblog_graphql.resolve_callback_config_solution", method: "solve"}

services:
    overblog_graphql.error_handler:
        class: Overblog\GraphQLBundle\Error\ErrorHandler
        public: false
        arguments:
            - ~
            - "@?logger"

    overblog_graphql.request_executor:
        class: Overblog\GraphQLBundle\Request\Executor
        arguments:
            - "@overblog_graphql.schema"
            - "@event_dispatcher"
            - %kernel.debug%
            - "@overblog_graphql.error_handler"
        calls:
            - ["addValidatorRule", ["@overblog_graphql.request_validator_rule_query_depth"]]
            - ["addValidatorRule", ["@overblog_graphql.request_validator_rule_query_complexity"]]

    overblog_graphql.request_validator_rule_query_depth:
        class: Overblog\GraphQLBundle\Request\Validator\Rule\QueryDepth

    overblog_graphql.request_validator_rule_query_complexity:
        class: Overblog\GraphQLBundle\Request\Validator\Rule\QueryComplexity

    overblog_graphql.request_parser:
        class: Overblog\GraphQLBundle\Request\Parser

    overblog_graphql.request_batch_parser:
        class: Overblog\GraphQLBundle\Request\BatchParser

    overblog_graphql.schema:
        class: GraphQL\Schema
        public: false
        factory: ["@overblog_graphql.schema_builder", create]
        arguments:
            - ~
            - ~
            - ~

    overblog_graphql.schema_builder:
        class: Overblog\GraphQLBundle\Definition\Builder\SchemaBuilder
        public: false
        arguments:
            - "@overblog_graphql.type_resolver"
            - false

    overblog_graphql.type_builder:
        class: Overblog\GraphQLBundle\Definition\Builder\TypeBuilder
        arguments:
            - "@overblog_graphql.config_resolver"

    overblog_graphql.config_resolver:
        class: Overblog\GraphQLBundle\Resolver\ConfigResolver
        configurator: ["@overblog_graphql.resolver_configurator", "configureConfig"]
        calls:
            - ["setDefaultResolveFn", [%overblog_graphql.default_resolver%]]

    overblog_graphql.type_resolver:
        class: Overblog\GraphQLBundle\Resolver\TypeResolver
        configurator: ["@overblog_graphql.resolver_configurator", "configureType"]
        arguments:
            -
        calls:
            - ["setContainer", ["@service_container"]]
            - ["setMapping", [%overblog_graphql.types_mapping%]]

    overblog_graphql.field_resolver:
        class: Overblog\GraphQLBundle\Resolver\FieldResolver
        configurator: ["@overblog_graphql.resolver_configurator", "configureField"]

    overblog_graphql.arg_resolver:
        class: Overblog\GraphQLBundle\Resolver\ArgResolver
        configurator: ["@overblog_graphql.resolver_configurator", "configureArg"]

    overblog_graphql.resolver_resolver:
        class: Overblog\GraphQLBundle\Resolver\ResolverResolver
        configurator: ["@overblog_graphql.resolver_configurator", "configureResolver"]

    overblog_graphql.mutation_resolver:
        class: Overblog\GraphQLBundle\Resolver\MutationResolver
        configurator: ["@overblog_graphql.resolver_configurator", "configureMutation"]

    overblog_graphql.resolver_configurator:
        class: Overblog\GraphQLBundle\DependencyInjection\Configurator\ResolverConfigurator
        calls:
            - ["setContainer", ["@service_container"]]
            - ["addMapping", ["type", %overblog_graphql.types_mapping%]]
            - ["addMapping", ["field", %overblog_graphql.fields_mapping%]]
            - ["addMapping", ["arg", %overblog_graphql.args_mapping%]]
            - ["addMapping", ["resolver", %overblog_graphql.resolvers_mapping%]]
            - ["addMapping", ["mutation", %overblog_graphql.mutations_mapping%]]
            - ["addMapping", ["config", %overblog_graphql.configs_mapping%]]

    overblog_graphql.cache_expression_language_parser.default:
        class: Symfony\Component\ExpressionLanguage\ParserCache\ArrayParserCache
        public: false

    overblog_graphql.expression_language.default:
        class: Overblog\GraphQLBundle\ExpressionLanguage\ExpressionLanguage
        public: false
        arguments:
            - "@overblog_graphql.cache_expression_language_parser"
            - []
        calls:
            - ["setContainer", ["@service_container"]]

    overblog_graphql.event_listener.request_file_listener:
        class: Overblog\GraphQLBundle\EventListener\RequestFilesListener
        arguments:
            - "@request_stack"
        tags:
            - { name: kernel.event_listener, event: graphql.executor.context, method: onExecutorContextEvent }

    #ConfigSolution
    overblog_graphql.abstract_config_solution:
        class: Overblog\GraphQLBundle\Resolver\Config\AbstractConfigSolution
        abstract: true
        calls:
            - ["setArgResolver", ["@overblog_graphql.arg_resolver"]]
            - ["setTypeResolver", ["@overblog_graphql.type_resolver"]]
            - ["setExpressionLanguage", ["@overblog_graphql.expression_language"]]
            - ["setFieldResolver", ["@overblog_graphql.field_resolver"]]
            - ["setConfigResolver", ["@overblog_graphql.config_resolver"]]

    overblog_graphql.fields_config_solution:
        class: Overblog\GraphQLBundle\Resolver\Config\FieldsConfigSolution
        parent: overblog_graphql.abstract_config_solution
        arguments:
            - "@overblog_graphql.type_config_solution"
            - "@overblog_graphql.resolve_callback_config_solution"

    overblog_graphql.type_config_solution:
        class: Overblog\GraphQLBundle\Resolver\Config\TypeConfigSolution
        parent: overblog_graphql.abstract_config_solution

    overblog_graphql.resolve_callback_config_solution:
        class: Overblog\GraphQLBundle\Resolver\Config\ResolveCallbackConfigSolution
        parent: overblog_graphql.abstract_config_solution

    overblog_graphql.values_config_solution:
        class: Overblog\GraphQLBundle\Resolver\Config\ValuesConfigSolution
        parent: overblog_graphql.abstract_config_solution
