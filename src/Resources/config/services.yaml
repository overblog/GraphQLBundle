parameters:
    overblog_graphql_types.config: []

services:
    _defaults:
        autowire: true

    _instanceof:
        Overblog\GraphQLBundle\Generator\ConfigBuilder\ConfigBuilderInterface:
            tags: [ 'overblog_graphql.config_builder' ]
        Overblog\GraphQLBundle\Generator\TypeBaseClassProvider\TypeBaseClassProviderInterface:
            tags: [ 'overblog_graphql.type_base_class.provider' ]

    Overblog\GraphQLBundle\Executor\Executor: ~
    Overblog\GraphQLBundle\Request\Parser: ~
    Overblog\GraphQLBundle\Request\BatchParser: ~
    GraphQL\Executor\Promise\Adapter\SyncPromiseAdapter: ~
    Overblog\GraphQLBundle\Executor\Promise\Adapter\ReactPromiseAdapter: ~
    Overblog\GraphQLBundle\Resolver\FieldResolver: ~

    Overblog\GraphQLBundle\Definition\GraphQLServices:
        tags: ['container.service_locator']

    Overblog\GraphQLBundle\Request\Executor:
        arguments:
            - "@overblog_graphql.executor"
            - "@overblog_graphql.promise_adapter"
            - "@event_dispatcher"
            - '@overblog_graphql.default_field_resolver'
            - "%overblog_graphql.use_experimental_executor%"
        calls:
            - ["setMaxQueryComplexity", ["%overblog_graphql.query_max_complexity%"]]
            - ["setMaxQueryDepth", ["%overblog_graphql.query_max_depth%"]]

    Overblog\GraphQLBundle\Definition\Builder\SchemaBuilder:
        arguments:
            - '@Overblog\GraphQLBundle\Resolver\TypeResolver'
            - false

    Overblog\GraphQLBundle\Definition\Builder\TypeFactory: ~

    Overblog\GraphQLBundle\Resolver\TypeResolver:
        calls:
            - ['setDispatcher', ['@event_dispatcher']]
        tags:
            - { name: overblog_graphql.service, alias: typeResolver }

    Overblog\GraphQLBundle\Transformer\ArgumentsTransformer:
        arguments:
            - '@?validator'
            - '%overblog_graphql_types.classes_map%'

    Overblog\GraphQLBundle\Resolver\QueryResolver:
        tags:
            - { name: overblog_graphql.service, alias: queryResolver }

    Overblog\GraphQLBundle\Resolver\MutationResolver:
        tags:
            - { name: overblog_graphql.service, alias: mutationResolver }

    Overblog\GraphQLBundle\Resolver\AccessResolver:
        arguments:
            - '@overblog_graphql.promise_adapter'

    Overblog\GraphQLBundle\ExpressionLanguage\ExpressionLanguage:
        arguments:
            - '@?overblog_graphql.cache_expression_language_parser'

    Overblog\GraphQLBundle\Generator\:
        resource: '../../Generator/*'
        exclude: '../../Generator/{Collection.php,Exception,Model,TypeGeneratorOptions.php}'

    Overblog\GraphQLBundle\Generator\AwareTypeBaseClassProvider:
        arguments:
            $providers: !tagged_iterator 'overblog_graphql.type_base_class.provider'

    Overblog\GraphQLBundle\Generator\ConfigBuilder:
        arguments:
            $builders: !tagged_iterator 'overblog_graphql.config_builder'

    Overblog\GraphQLBundle\Generator\TypeBuilder:
        arguments:
            $namespace: '%overblog_graphql.class_namespace%'

    Overblog\GraphQLBundle\Generator\TypeGenerator:
        arguments:
            $typeConfigs: '%overblog_graphql_types.config%'
            $options: !service
                class: Overblog\GraphQLBundle\Generator\Model\TypeGeneratorOptions
                arguments:
                    - '%overblog_graphql.class_namespace%'
                    - '%overblog_graphql.cache_dir%'
                    - '%overblog_graphql.use_classloader_listener%'
                    - '%kernel.cache_dir%'
                    - '%overblog_graphql.cache_dir_permissions%'

    Overblog\GraphQLBundle\Definition\ArgumentFactory:
        arguments:
            - '%overblog_graphql.argument_class%'
        tags:
            - { name: overblog_graphql.service, alias: argumentFactory }

    Overblog\GraphQLBundle\Controller\GraphController:
        public: true
        arguments:
            $shouldHandleCORS: "%overblog_graphql.handle_cors%"
            $graphQLBatchingMethod: "%overblog_graphql.batching_method%"

    Overblog\GraphQLBundle\Definition\ConfigProcessor:
        arguments:
            - !tagged_iterator 'overblog_graphql.definition_config_processor'

    GraphQL\Executor\Promise\PromiseAdapter: "@overblog_graphql.promise_adapter"

    Overblog\GraphQLBundle\Validator\Formatter:
        tags:
            - { name: kernel.event_listener, event: graphql.error_formatting, method: onErrorFormatting }

    Overblog\GraphQLBundle\Security\Security:
        arguments:
            - '@?security.helper'
        tags:
            - { name: overblog_graphql.service, alias: security, public: false }

    Overblog\GraphQLBundle\Validator\InputValidatorFactory:
        arguments:
            - '@?validator.validator_factory'
            - '@?validator'
            - '@?translator.default'
        tags:
            - { name: overblog_graphql.service, alias: input_validator_factory, public: false }
