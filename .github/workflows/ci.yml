name: CI

on:
  pull_request:
    branches:
      - "*.*"
      - master
  push:
    branches:
      - "*.*"
      - master

jobs:
  tests:
    runs-on: "${{ matrix.operating-system }}"
    strategy:
      fail-fast: false
      matrix:
        operating-system: ['ubuntu-latest']
        php-version: ['7.4', '8.0']
        symfony-version: ['4.4', '5.3']
        dependencies: ['lowest', 'highest']
        remove-dependencies: ['']
        coverage: ['']
        include:
          - operating-system: 'windows-latest'
            php-version: '8.0'
            symfony-version: '5.3'
            dependencies: 'lowest'
          - operating-system: 'linux-latest'
            php-version: '8.0'
            symfony-version: '5.3'
            dependencies: 'lowest'
            remove-dependencies: '--dev symfony/validator'
          - operating-system: 'linux-latest'
            php-version: '8.0'
            symfony-version: '5.3'
            dependencies: 'lowest'
            coverage: "pcov"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "${{ matrix.coverage }}"

      - name: "Change stability"
        if: "matrix.stability != ''"
        run: perl -pi -e 's/^}$/,"minimum-stability":"'"${{ matrix.minimum-stability }}"'"}/' composer.json

      - name: "Symfony version"
        if: "matrix.symfony-version != ''"
        run: perl -pi -e 's#"(symfony/.*)":\s*".*"#"$1":"'"${{ matrix.symfony-version }}.\*"'"#' composer.json

      - name: "Webonyx GraphQL version"
        if: "matrix.graphql-version != ''"
        run: composer require "webonyx/graphql-php:${{ matrix.graphql-version }}" --dev --no-update

      - name: Remove dependencies
        if: "matrix.remove-dependencies != ''"
        run: composer remove --no-update ${{ matrix.remove-dependencies }}

      - name: "Install dependencies"
        uses: ramsey/composer-install@1.3.0

      - name: "Run tests"
        run: composer test

      - name: "Upload coverage results to Coveralls"
        if: "matrix.coverage == 'pcov'"
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          composer global require php-coveralls/php-coveralls
          php-coveralls --coverage_clover=build/logs/clover.xml -v

  coding-standard:
    runs-on: ubuntu-20.04
    name: Coding Standard
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"

      - name: "Install dependencies"
        uses: ramsey/composer-install@1.3.0

      - name: "Check coding standard"
        run: composer check-cs

  benchmark:
    runs-on: ubuntu-20.04
    name: Benchmark
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"

      - name: "Install dependencies"
        uses: ramsey/composer-install@1.3.0

      - name: "Run benchmark"
        run: composer bench

  static-analysis:
    runs-on: ubuntu-20.04
    name: "Static analysis"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"

      - name: "Install dependencies"
        uses: ramsey/composer-install@1.3.0

      - name: "Run static-analysis"
        run: composer static-analysis
